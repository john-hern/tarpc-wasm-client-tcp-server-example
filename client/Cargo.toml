[package]
name = "client"
version = "0.1.0"
authors = ["John Hernandez <john.hern@outlook.com>"]
edition = "2018"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
crate-type = ["cdylib"]

[dependencies]
yew = {version = "0.17"}
wasm-bindgen = "0.2.67"
# tarpc = {path="../../tarpc/tarpc", features=["tokio1", "wasm", "serde1"]}
tarpc = {git = "https://github.com/john-hern/tarpc", branch = "wasm_support", features=["tokio1", "wasm", "serde1"] }
async-stream = "*"
async-trait = "*"
web-sys = {version="*", features=["console"]}
futures = "0.3.1"
futures-util = "0.3.1"
futures-sink = "0.3.1"
serde = { version = "1.0"}
anyhow = "*"
tokio = {version="0.2", features=["rt-core", "io-util", "stream", "time"]}
tokio-serde = { version = "0.6", features = ["json"] }
tokio-util = { version = "0.3", features = ["codec"] }
log = "*"
pin-project = "*"
bytes = "*"
wasm-bindgen-futures = "*"
# wasm-timer = {path="../../wasm-timer"}
wasm-timer = { git = "https://github.com/john-hern/wasm-timer", branch = "tokioShim" }
ws_stream_wasm = {version = "0.6.1", features=["tokio_io"]}
async_io_stream = "0.1"
simple_logger = "*"
rand = {version = "0.7", features=["wasm-bindgen"]}
rpc = {path="../rpc"}


[package.metadata.wasm-pack.profile.dev]
# Should `wasm-opt` be used to further optimize the wasm binary generated after
# the Rust compiler has finished? Using `wasm-opt` can often further decrease
# binary size or do clever tricks that haven't made their way into LLVM yet.
#
# Configuration is set to `false` by default for the dev profile, but it can
# be set to an array of strings which are explicit arguments to pass to
# `wasm-opt`. For example `['-Os']` would optimize for size while `['-O4']`
# would execute very expensive optimizations passes
wasm-opt = ['-O']

[package.metadata.wasm-pack.profile.dev.wasm-bindgen]
# Should we enable wasm-bindgen's debug assertions in its generated JS glue?
debug-js-glue = true
# Should wasm-bindgen demangle the symbols in the "name" custom section?
demangle-name-section = true
# Should we emit the DWARF debug info custom sections?
dwarf-debug-info = false

[package.metadata.wasm-pack.profile.profiling]
wasm-opt = ['-O']

[package.metadata.wasm-pack.profile.profiling.wasm-bindgen]
debug-js-glue = false
demangle-name-section = true
dwarf-debug-info = false

# `wasm-opt` is on by default in for the release profile, but it can be
# disabled by setting it to `false`
[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[package.metadata.wasm-pack.profile.release.wasm-bindgen]
debug-js-glue = false
demangle-name-section = true
dwarf-debug-info = false